name: Build Containers

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '30 3 * * 0'

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build-push:
    runs-on: ubuntu-22.04
    name: Build and push containers
    strategy:
      matrix:
        include:
          -
            baseimage: "debian:bookworm"
            tags: ["latest", "bookworm"]
          -
            baseimage: "python:3.13-bookworm"
            tags: ["python", "python-bookworm", "python3.13", "python3.13-bookworm"]
    steps:
      -
        name: Set variables
        id: vars
        run: |
          echo "gh-repo=ghcr.io/${GITHUB_REPOSITORY_OWNER}/raspberrypi-os" >> $GITHUB_OUTPUT
          echo "dh-repo=${GITHUB_REPOSITORY_OWNER}/raspberrypi-os" >> $GITHUB_OUTPUT
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          pull: true
          platforms: linux/arm/v6
          tags: |
            ${{ steps.vars.outputs.gh-repo }}:${{ join(matrix.tags, format(',{0}:', steps.vars.outputs.gh-repo)) }},
            ${{ steps.vars.outputs.dh-repo }}:${{ join(matrix.tags, format(',{0}:', steps.vars.outputs.dh-repo)) }}
          build-args: BASE_CONTAINER=${{ matrix.baseimage }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.gh-repo }}-cache:${{ matrix.tags[0] }}
          cache-to: type=registry,ref=${{ steps.vars.outputs.gh-repo }}-cache:${{ matrix.tags[0] }},mode=max
